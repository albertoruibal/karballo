package karballo.hash

/*
 * Computes the Polyglot key of a FEN String. Adapted from Toga code by Michel Van den Bergh:
 * http://alpha.uhasselt.be/Research/Algebra/Toga/pg_key.c
 *
 * Not used in the main code, only for testing and array generation
 */
object ZobristKeyFen {

    internal val random64 = longArrayOf(-7117617611634414271, 3096006490854172103, 4961560858198160711, -7199576581966697758, 8467686926187236489, 3643601464190828991, 1133690081497064057, -1712897760329768758, 972344712846728208, 1875810966947487789, -7636462362570079312, -3449195065476763947, 4665150172008230450, 77499164859392917, 6752165915987794405, 2566923340161161676, 419294011261754017, 7466832458773678449, 8379435287740149003, 9012210492721573360, -9023119502491076660, -927302695338870676, 3680699783482293222, 5454859592240567363, -6168633590159683332, -8233256716529052661, -8659851112597712361, 1870057424550439649, -5428191116858910017, 8864492181390654148, -3943696798190020515, 2642043227856860416, 5521189128215049287, 1488034881489406017, -6405355056885088877, 236592455471957263, 7168370738516443200, 707553987122498196, 3852097769995099451, 8313129892476901923, 1761594034649645067, 2291114854896829159, -3237903676947602091, -4640889180432530876, -6956705385196247004, 5903053950100844597, 6666107027411611898, -218426187369631167, 3626425922614869470, -8325814959521189771, -5063052553617656857, 9148094160140652064, 1284939680052264319, 7307368198934274627, 5611679697977124792, -7577707393933148579, 4819485793530191663, 7866624006794876513, 4794093907474700625, 6849775302623042486, 4177248038373896072, -7798627118210467701, 7195685255425235832, -1434736733280752266, 6004979459829542343, 575228772519342402, 5806056339682094430, 8920438500019044156, 1872523786854905556, 7168173152291242201, -9058528327592164873, 8767779863385330152, 1489771135892281206, -1061241206578699883, -2684379813869300996, 2649182342564336630, -4940966502553021718, 928423270205194457, -6585158539226940220, -1613020756858095303, 2875176145464482879, -8847901732119490575, 6103491276194240627, 8264435384771931435, -1255011998991573177, -7312248682904753503, 8118948727165493749, -452438870359771710, -8668335600576165967, -6672393216155760456, -5887731630549795598, 1810658488341658557, -8665204105580500247, 658149708018956377, -69816450156784432, -8221078497326742194, -7199510714699703159, -5480269155866560275, 4111328737826509899, 6628917895947053289, 2166287019647928708, -7317033582308389709, 5728850993485642500, 7135057069693417668, 2409960466139986440, 6600979542443030540, 5794634036844991298, 1765885809474863574, 7278670237115156036, -2318345334258142041, -1183745501610368782, 8877430296282562796, -5044746123895283133, 407550088776850295, -5365866959392798091, 5365205568318698487, -3511034280684146806, -776761410179450844, 4357691132969283455, -1304134592068362083, 8763584794241613617, -8767545796439405940, -7505469452821431437, -6753601202686884558, 306186389089741728, -7922319286853618274, 8136607301146677452, 8332101422058904765, 6215931344642484877, -1176482456577273983, -4962589000476002385, 5040091220514117480, -7849913836115364766, -43044781523771743, -5881067973083878800, -2509529976529168132, 9145986266726084057, 2521545561146285852, -3956411269506295511, -9184011107927260315, -2394674665211165194, 2012514900658959106, 4851386166840481282, -6154561019552412806, -6307235393847693738, 7319524202191393198, -2390612934246005514, 2445601317840807269, -5470303936463679940, -7946502699748727984, 1211454228928495690, 2931510483461322717, -4193944676823227306, 6217490319246239553, 3253094721785420467, -7222186592991335468, -1211743989268045124, -5827584294354409384, 5189293263797206570, -5840131557960057277, 1850950425290819967, 5933835573330569280, -797006402233243920, 1240625309976189683, -4835227570594987755, -7087500065266820785, 463713201815588887, 5603848033623546396, 5837679654670194627, -4577276249006689100, -5445157863262884228, -5511954857782272889, 2422944928445377056, 3310549754053175887, 8519766042450553085, -606925578055940448, -2942946220820427471, -2435486243585145781, 862037678550916899, 3197637623672940211, 5210919022407409764, -3475573908164538853, -5738531550834291303, -7286398923439835928, -6558283579219683126, -1777488582077034890, 7618258446600650238, -453254132140704618, -258250171718674949, -7176401658345012201, -8157851634567385392, 7423022476929853822, -4231143402258348978, 8710936142583354014, -100692273235294726, 629718674134230549, -7848113977168848178, -7780501039097782411, -2369562330250108912, 4303848835390748061, -3262948163554511041, -602825012910263304, -2885415085016290431, -2784376253081124953, 3706272247737428199, -6395030266941625231, -6704140522967532107, 5704473791139820979, -8659436106485368743, 1637612482787097121, 8908762506463270222, -889891063729036404, 4157033003383749538, -238877964596788188, 1800584982121391508, 5477894166363593411, 4674885479076762381, -8286718691916758335, 7550910419722901151, 8799727354050345442, -7125432498641740945, 4039979115090434978, 3605513501649795505, 3876110682321388426, -6265874557923512399, 8620494007958685373, 5854220346205463345, 4855373848161890066, -2791760472357952421, 5949110547793674363, 5957016279979211145, -7125263955721355405, 8228060533160592200, 2094843038752308887, 8801329274201873314, 297395810205168342, 6489982145962516640, 925952168551929496, 6268205602454985292, 2903841526205938350, 359914117944187339, 8371662176944962179, -7307597380444705476, -8639167831183607326, 5795683315677088036, -5757784274115990919, 1070089889651807102, 6778454470502372484, -686688449954468754, 1983224895012736197, -2685835992369688543, 942692161281275413, -6312457544560218087, -7799067531746373637, -7356718043541534927, 5245566602671237210, 9195060651485531055, 6368791473535302177, 3229483537647869491, -3214461869429917290, 928484295759785709, 1909608352012281665, -8034650149685246498, 5773445318897257735, 3990834569972524777, -7675348306896289970, 4209783265310087306, -3128590709331025083, 616435239304311520, -485352023391264328, 7798983577523272147, 3913469721920333102, -3022076089717407198, 6239239264182308800, 1654244791516730287, -1217848141703766125, 6221161860315361832, -1390141990708018827, -4987831551100114613, -5529078456224335278, 7337288846716161725, -5424555790927851038, -5466800325109811545, 510457344639386445, 8796640079689568245, -4881735209222593326, 6465331256500611624, -7415446863621302972, 8017026739316632057, 3627975979343775636, -3394528423913180349, 6222903725779446311, 3527832623857636372, -2849693101024154289, 8924250025456295612, -4045937359548092780, -7747633557851937220, -3978586660626014369, 4223238849618215370, -2764893807176054556, 1140009269240963018, -5480222307947335495, -5751042123502621052, 3881319844097050799, -1588072837735502258, -1442565630059000999, -7902221177050684800, -5067872407110470413, 7580967567056532817, -4166857726643058241, -3655428046510026134, -4906602186354729269, -2556870867600940496, -5005447323036875848, -6648276097457692213, -1587952015247572959, 704784010218719535, -8849761751120126775, -9149066151885549738, 687173692492309888, 2573542046251205823, -4381758060701354339, 5122261027125484554, -6280299527312203635, 392580029432520891, -5369083948807480889, -1668041885421938881, 3451078315256158032, 1238907336018749328, 9205113463181886956, 1667962162104261376, -7615990091925507577, 4479827962372740717, -4723074364987629396, -550798907951659849, 5275192813757817777, 2148246364622112874, 2290795724393258885, -253162723436299526, 1776293542351822525, -3689732299588779379, 4313244667902787366, -6165228101000850014, -1635869182558457729, -5214973253231643794, -3108706094173697875, 3321611548688927336, 3305807524324674332, -5061732229000748930, 7248312053715383136, -7754480333218511484, -2611856101870623399, -3282213444060272849, 9112428691881135949, 7848957776938116907, -7494927886966539228, 8896660382367628050, -8842837798196294764, 8762207035762213579, -3459299730036712668, -9036992843571423785, -7855717824450087951, 7197363620976276483, -4145362416552097252, 6373588016705149671, 685071415365890925, -6961025044515806144, -6921029952340425425, -1983292083700476020, -1733165894704959795, 6251124536988276734, 6144308296388004591, 8880818733894805775, 1303007271453773655, 9174156641096830119, 8824404812019774483, 4420129794615782201, -8495187234923475788, 8883975763174874978, -7709859765033275901, 5595889224692918441, 4306406647446967767, 6704191827946442961, 9195534799547011879, -2721803534724933711, -2531729836700005339, 3928039610514994951, -3573548994530823287, -6084204670034616524, 4869881251581666789, -5460400459106163223, 1215083005313393810, -2611389914965073217, -7260687268226227326, -5297507950653649788, -4625529213342012336, -6264054769160028483, 2305696533800337221, -6047495272998113561, -5834172998942348995, 1949121388445288260, -5379009770048591566, -4360815174901894470, -4347701924302501399, -884756771763845121, -6934285729554595366, 7437568954088789707, 7915171836405846582, -6694092778555253967, 520574178807700830, -8462680832637173339, -2192588427498456587, 8412807604418121470, 5609875541891257226, -7122885458123533268, 8376971840073549054, 1383314287233606303, -2972521237957530560, 5204145074798490767, 2167677454434536938, -8105325240265828673, 8271005071015654673, -2909286158269631396, -7715852896319476306, -6935247590537980960, -2420506449658262810, -6607626754690151490, -7125392814103915483, 5895970210948560438, 3447475526873961356, 7334775646005305872, -2492284066326686611, 6939292427400212706, 8334626163711782046, 1912937584935571784, -6141772829141909856, 8524679326357320614, 2204997376562282123, 3197166419597805379, 4220875528993937793, 2803169229572255230, 5085503808422584221, -4001944857184464756, 4570145336765972565, 9186432380899140933, -7207128850928187954, -8573836118959825828, -8077052725099091274, -6872901447497050402, -396816797984991405, -2974960788477327719, -2311998167136774173, -5297324270288368904, -3882604781526113051, 2088698177441502777, -3346872395976619286, 5679318949880730421, -1955705304021469742, 1684901764271550206, 6019498834983443029, 8308552077872645018, 2774412133178445207, 2993471197969887147, 8756104692490586069, 7404378077533100169, -7054918957238328127, -1318335436663551995, 5816122712455824169, 5531291136777113635, 7400684525794093602, 2421696223438995901, 2746718911238191773, 2297623779240041360, -2931757618997826117, -5091566080359364152, 2151598180055853022, -3513011632246703702, -795500665323736509, 4086544267540179726, 3960368502933186560, -1498129122236047154, -7184131849074362877, -5833233003560719734, 2706199935239343179, -8392284860076226467, -805786339615115179, -3155757358848065085, -1830170615095512051, 2626432152093131908, -4421998591500243275, -6102548667584133652, 7167044992416702836, -6512755018830767576, 1255659969011027721, 3240842176865726111, 795178308456769763, -6057660688470347791, 6408553047871587981, -4114748024493078816, 3362936192376505047, 1486633608756523830, 8937438391818961808, -2933041310131459385, -9204136428534629549, -1447368335367659065, 225631029947824688, 5294122026845313316, -6779834932302576312, 6576914768872977647, -5432401932016084426, -3149974553771293647, 1344590668019013826, 8870296219354404, 1763076921063072981, -6735912242669201170, -7404447858617298160, -5523242177286330794, 2679459049130362043, -3297604595876809216, 2006921612949215342, 2441159149980359103, 4254066403785111886, -8280748781830503314, -478226388169132300, 4067155115498534723, -3862070249752561130, 7262306400971602773, 2599246507224983677, 1183331494191622178, 9203696637336472112, 8684305384778066392, 452576500022594089, 7158260433795827572, 5749101480176103715, 2141838636388669305, -5127046408239983365, -6707005227519968031, -2742143461777474807, -1158177344673395093, 3345333136360207999, -6221075131749871973, -5310895318150965567, 8127707564878445808, -7426305334632631762, -4646510815755199649, -7727291720446440205, 4467639418469323241, -5105491203086766093, 7043015398453076736, -4643966542147613368, 2597087673064131360, -250124276606665209, -1224189853575564238, -6843171236372059126, -9073093575002869048, -3198758860386093361, 2826050093225892884, 7047939442312345917, 1975862676241125979, 8471065344236531211, -7665310745516932263, -5736484889461131955, 6983092299355911633, 8891398163252015007, -213906536485350214, -8317869669453183656, 1184291664448112016, 8752186474456668498, -6562869240740929461, 8304258407043758711, -5415306440973393561, -7052086191139373095, -7100384126557577363, -3239204636105726481, 6743071165850287963, 1895531807983368793, 8070015023023620019, -2451832056240883254, 7264555371116116147, 638838107884199779, 612060626599877907, -2078162528421891077, 2028126038944990910, 8217932366665821866, -5731027174718830117, 4917760284400488853, 4689038209317479950, -2876688578317531702, 7353589116749496814, 6461588461223219363, -1709513839274943977, -7802992490642642440, -4557372729334641201, -3822959266735082868, 6280119077769544053, 5795026310427216669, -2865201508933622433, 5344020438314994897, -1356161753273905001, -5376351730844657950, 2499216570383001617, 5973851566933180981, -7283548499500808528, -7759862821659811914, 7802414647854227001, 7696730671131205892, -6507191444373290905, 8954801150602803298, 5805966293032425995, -7838261593662321029, 4997389530575201269, 7710978612650642680, 7716832357345836839, -3323431321145327255, -2446429154351403408, 5766400084981923062, -7200857806063814540, 8713884558928322285, 7910921931260759656, -1254265329846611475, 3651028258442904531, 4208705969817343911, 3568641929344250749, 7493701010274154640, 2245920858524015772, -5287726615758083227, -6156110632223716108, -847676012271350765, -339391230761074478, 3841784002685309084, 3972025232192455038, 7780701379940603769, -3673543119483549832, -2078634282757881654, -6948684187833482934, 331717439817162336, -236792732567011685, 639100052003347099, -8099574507787307615, -5353646232683726234, 2526013881820679475, 4894708394808468861, 4217798054095379555, 2415982786774940751, 2008219703699744969, 6034935405124924712, -2068809033829413525, -2976794435908412034, 6813989660423069229, 3171782229498906237, -5689255409585681882, 4587441767303016857, 1011542511767058351, 1218420902424652599, -6994674436138682061, -3114493420313727393, -9127831760372958176, -7947387725428979194, -1404709700660885128, 1805505087651779950, -5363013951754450589, -8519877247653478975, -6051660936535374862, -5432657379715846560, -354324339393897847, 4496402702769466389, 4275128525646469625, -1727796887562541994, 2644524053331857687, -1781398766969753407, 756689505943647349, 6332958748006341455, 5397518675852254155, 3282372277507744968, -3321886456795945333, -8488570490783378132, 550475751710050266, -8911359377770791788, -7418949222395686301, 1895999114042080393, -650773357961068032, 3512907883609256988, -8275867100986890362, 5100888107877796098, -3680555303400859359, 5664728055166256274, 1867780161745570575, 5069314540135811628, -7620386572563399119, 8428576418859462269, 6489498281288268568, 248384571951887537, -4037852901788685727, 3830179243734057519, -7470369288476554443, -6071470395341666208, -3529173984278120528, 5317296011783481118, 8812437177215009958, -2744615621445586530, 1418237564682130775, 8287918193617750527, 5641726496814939044, -47443777466463686, 6176181444192939950, -5160524448685921952, -3836896475970613836, -2668126031979123873, -5332828906549230440, 3534397173597697283, -1693429024984254962, 2378655170733740360, -552643018769440755, 551298419243755034, -4269103759267730770, -435572429638872008, 1942137629605578202, -741773765110731084, -7626055490284413820, 319261663834750185, -1126723894144361908, -7617977520976348028, -7192578181343322179, 5921710089078452638, 1692791583615940497, 3154220012138640370, 2462272376968205830, 5215882904155809664, 9063345109742779520, -8434249029387572864, 2282028593076952567, -1956459363404282278, -7088568204036607476, 2648366387851958704, 2535530668932196013, -3060551081441224714, 6797681746413993003, 9131737009282615627, 744965241806492274, -2912572593751847674, -7040231872174702793, 1724859165393741376, 2131804225590070214, -7796891254993561507, 7348272751505534329, -3028133809084889899, -4416447665223034257, 6426639016335384064, -3589502756575571236, 8982836549816060296, 2847738978322528776, -4171543124651995508, 1517491100508351526, -6959678130640022028, 7252270709068430025, 1454069630547688509, 879136823698237927, 764541931096396549, -1818291546970408658, 8210570252116953863, -1027731306262305510, -1789924905178677132, -7567181820563274204, -9105903926093857371, 6892625624787444041, 6239858431661771035, -7962612811332817823, -3310835631931791777, 3591372000141165328, -1052235342745599600, -6521666110210903136, 2231224496660291273, 8127998803539291684, -2154291592623801641, 16488107566197090, 2060923303336906913, -3516953014032317815, -3394515125949629582, 8630622898638529667, 7467898009369859339, -516182592762444535)

    internal val randomEnPassantOffset = 772
    internal val randomCastleOffset = 768
    internal val randomTurnOffset = 780
    internal val pieceNames = "pPnNbBrRqQkK"

    fun getKey(fen: String): Long {
        val boardString: String
        val turn: String
        val castleFlags: String
        val enPassantSquare: String
        val board = Array(8) { CharArray(8) }
        var pieceChar: Char
        var i: Int
        var pieceEncode: Int
        var key: Long = 0
        val tokens = fen.split("[ \\t\\n\\x0B\\f\\r]+".toRegex()).dropLastWhile(String::isEmpty).toTypedArray()
        boardString = tokens[0]
        turn = tokens[1]
        castleFlags = tokens[2]
        enPassantSquare = tokens[3]

        var rank = 7
        var file = 0
        var p = 0
        while (true) {
            if (p >= boardString.length)
                break
            pieceChar = boardString[p++]
            if (pieceChar == '/') {
                rank--
                file = 0
                continue
            }
            if (pieceChar in '1'..'8') {
                i = 0
                while (i <= pieceChar - '1') {
                    board[file++][rank] = '-'
                    i++
                }
                continue
            }
            board[file++][rank] = pieceChar
        }

        file = 0
        while (file <= 7) {
            rank = 0
            while (rank <= 7) {
                pieceChar = board[file][rank]
                if (pieceChar != '-') {
                    pieceEncode = pieceNames.indexOf(pieceChar)
                    key = key xor random64[64 * pieceEncode + 8 * rank + file]
                }
                rank++
            }
            file++
        }
        p = 0
        while (true) {
            if (p >= castleFlags.length)
                break
            pieceChar = castleFlags[p++]
            when (pieceChar) {
                '-' -> {
                }
                'K' -> key = key xor random64[randomCastleOffset]
                'Q' -> key = key xor random64[randomCastleOffset + 1]
                'k' -> key = key xor random64[randomCastleOffset + 2]
                'q' -> key = key xor random64[randomCastleOffset + 3]
            }
        }
        // EnPassant Flag is only set if pawn can capture
        if ("-" != enPassantSquare) {
            file = enPassantSquare[0] - 'a'
            if ("b" == turn) {
                if (file > 0 && board[file - 1][3] == 'p' || file < 7 && board[file + 1][3] == 'p') {
                    key = key xor random64[randomEnPassantOffset + file]
                }
            } else {
                if (file > 0 && board[file - 1][4] == 'P' || file < 7 && board[file + 1][4] == 'P') {
                    key = key xor random64[randomEnPassantOffset + file]
                }
            }
        }
        if ("w" == turn) {
            key = key xor random64[randomTurnOffset]
        }
        return key
    }

    //	public static void pieceArray(String name, char pieceChar0, char pieceChar1) {
    //
    //		int pieceEncode;
    //
    //		System.out.print("public static final long " + name + "[][] = {");
    //		for (int color = 0; color < 2; color++) {
    //			System.out.print("{");
    //			int column = 7;
    //			int row = 0;
    //			long square = BitboardUtils.H1;
    //			while (square != 0) {
    //				pieceEncode = pieceNames.indexOf((color == 0 ? pieceChar0 : pieceChar1));
    //				System.out.print("0x" + Long.toHexString(random64[64 * pieceEncode + 8 * row + column]) + "L");
    //				if (square != BitboardUtils.A8)
    //					System.out.print(", ");
    //				square <<= 1;
    //				column--;
    //				if (column == -1) {
    //					column = 7;
    //					row++;
    //				}
    //			}
    //			System.out.print("}");
    //			if (color == 0)
    //				System.out.print(",");
    //		}
    //		System.out.println("};");
    //	}
    //
    //	/**
    //	 * Covert to index form
    //	 *
    //	 * @param args
    //	 */
    //	public static void main(String args[]) {
    //		int column;
    //		pieceArray("pawn", 'P', 'p');
    //		pieceArray("rook", 'R', 'r');
    //		pieceArray("knight", 'N', 'n');
    //		pieceArray("bishop", 'B', 'b');
    //		pieceArray("queen", 'Q', 'q');
    //		pieceArray("king", 'K', 'k');
    //
    //		System.out.println("public static final long whiteKingSideCastling = 0x" + Long.toHexString(random64[randomCastleOffset]) + "L;");
    //		System.out.println("public static final long whiteQueenSideCastling = 0x" + Long.toHexString(random64[randomCastleOffset + 1]) + "L;");
    //		System.out.println("public static final long blackKingSideCastling = 0x" + Long.toHexString(random64[randomCastleOffset + 2]) + "L;");
    //		System.out.println("public static final long blackQueenSideCastling = 0x" + Long.toHexString(random64[randomCastleOffset + 3]) + "L;");
    //
    //		// passant flags only when pawn can capture
    //		System.out.print("public static final long passantFile[] = {");
    //		for (column = 0; column < 8; column++) {
    //			System.out.print("0x" + Long.toHexString(random64[randomEnPassantOffset + column]) + "L, ");
    //		}
    //		System.out.println("};");
    //
    //		System.out.println("public static final long whiteMove = 0x" + Long.toHexString(random64[randomTurnOffset]) + "L");
    //	}
}